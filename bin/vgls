#!/usr/bin/env ruby

require File.expand_path(File.dirname(__FILE__) + "/../lib/vagrant/tools")
require 'optparse'


def main(argv)
  # set configuration
  vgtools_cfg = Vagrant::Tools.config do |c|
    # defaults
    c.prefix = ENV["HOME"]
    c.verbose = false
    # getopts
    opt_parser = OptionParser.new do |opts|
      opts.banner = "Vagrant list, Usage: vgls [options]"
      opts.on("-p", "--prefix DIR", String, "Define prefix (default $HOME)") do |v|
        c.prefix = v
        c.refresh_cache = true
      end
      opts.on("-v", "--verbose", "Verbose output") do |v|
        c.verbose = true
      end
      opts.on("-t", "--target TARGET", String, "Target specific config (Vagrantfile dir)") do |v|
        c.target = v
      end
      opts.on("-x", "--refresh-cache", "Refresh cached results") do |v|
        c.refresh_cache = v
      end
      opts.on("-a", "--only-active", "Show only active VMs") do |v|
        c.output[:only_active] = v
      end
      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit 1
      end

    end
    begin
      opt_parser.parse!
    rescue OptionParser::InvalidOption => e
      puts e.message
      exit 1
    rescue OptionParser::MissingArgument => e
      puts e.message
      exit 1
    end
  end

  verify = vgtools_cfg.verify? do |errors|
    # if
    # errors[:]
  end
  unless verify
    puts vgtools_cfg.error_messages
    exit 1
  end

  cfg = Vagrant::Tools.get_config 
  if cfg.verbose
    puts "Running `#{File.basename(__FILE__)}` in verbose mode (disable by removing -v [options])"
  end

  # output lists
  root = Vagrant::Tools::Root.new
  puts root.to_outputs

  if root.cache.cache_old? 
    a = root.cache.cache_time_a
    puts "Cache is %dd, %dh, %dm, and %ds old (consider refreshing -x)" % a
  elsif cfg.verbose
    a = root.cache.cache_time_a
    puts "Cache is %dd, %dh, %dm, and %ds old" % a
  end

end


if File.basename(__FILE__) == File.basename($0)
  begin
    main(ARGV)
  rescue Interrupt
    exit 0
  end
end
